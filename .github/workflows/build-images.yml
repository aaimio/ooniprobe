name: Build OONI Probe Docker images

on:
  workflow_dispatch:
    inputs:
      version:
        required: true

env:
  REGISTRY_IMAGE: aaimio/ooniprobe

permissions:
  contents: write

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        platform:
          - [linux/386, linux-386]
          - [linux/amd64, linux-amd64]
          - [linux/arm64, linux-arm64]
          - [linux/arm/v6, linux-armv6]
          - [linux/arm/v7, linux-armv7]

    steps:
      - name: Prepare env variables
        run: |
          platform=${{ matrix.platform[0] }}
          echo "PLATFORM_PAIR=${platform//\//-}" >> $GITHUB_ENV

      - name: Pull Docker image metadata
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.REGISTRY_IMAGE }}

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ vars.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build and push by digest
        id: build
        uses: docker/build-push-action@v6
        with:
          platforms: ${{ matrix.platform[0] }}
          labels: ${{ steps.meta.outputs.labels }}
          outputs: type=image,name=${{ env.REGISTRY_IMAGE }},push-by-digest=true,name-canonical=true,push=true
          build-args: |
            TARGET_FILE=${{ matrix.platform[1] }}
            TARGET_VERSION=${{ inputs.version }}

      - name: Export digest
        run: |
          mkdir -p /tmp/digests
          digest="${{ steps.build.outputs.digest }}"
          touch "/tmp/digests/${digest#sha256:}"

      - name: Upload digest
        uses: actions/upload-artifact@v4
        with:
          name: digests-${{ env.PLATFORM_PAIR }}
          path: /tmp/digests/*
          if-no-files-found: error
          retention-days: 1

  merge:
    runs-on: ubuntu-latest
    needs:
      - build
    steps:
      - name: Download digests
        uses: actions/download-artifact@v4
        with:
          path: /tmp/digests
          pattern: digests-*
          merge-multiple: true

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Generate major-minor tag
        run: |
          version_tag=${{ inputs.version }}
          echo "VERSION_MAJOR_MINOR=${version_tag%.*}" >> $GITHUB_ENV

      - name: Docker meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.REGISTRY_IMAGE }}
          tags: |
            type=raw,value=${{ env.VERSION_MAJOR_MINOR }}
            type=raw,value=latest

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ vars.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Create manifest list and push
        working-directory: /tmp/digests
        run: |
          docker buildx imagetools create $(jq -cr '.tags | map("-t " + .) | join(" ")' <<< "$DOCKER_METADATA_OUTPUT_JSON") \
          $(printf '${{ env.REGISTRY_IMAGE }}@sha256:%s ' *)

      - name: Create release
        run: |
          gh release create ${{ inputs.version }} \
          -R aaimio/ooniprobe \
          -t ${{ inputs.version }} \
          -n "https://github.com/ooni/probe-cli/releases/tag/${{ inputs.version }}/" \
          || true
        env:
          GH_TOKEN: ${{ github.token }}
